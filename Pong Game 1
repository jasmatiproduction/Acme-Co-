import pygame
import sys

# Initialize
pygame.init()

# Constants
WIDTH, HEIGHT = 800, 600
PADDLE_WIDTH, PADDLE_HEIGHT = 10, 100
BALL_RADIUS = 8
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
FPS = 60

# Create screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pong")
clock = pygame.time.Clock()
font = pygame.font.SysFont("Arial", 36)

# Paddles and Ball
left_paddle = pygame.Rect(20, HEIGHT//2 - PADDLE_HEIGHT//2, PADDLE_WIDTH, PADDLE_HEIGHT)
right_paddle = pygame.Rect(WIDTH - 30, HEIGHT//2 - PADDLE_HEIGHT//2, PADDLE_WIDTH, PADDLE_HEIGHT)
ball = pygame.Rect(WIDTH//2, HEIGHT//2, BALL_RADIUS*2, BALL_RADIUS*2)
ball_vel = [5, 5]

# Scores
left_score = 0
right_score = 0

def reset_ball():
    ball.center = (WIDTH // 2, HEIGHT // 2)
    ball_vel[0] *= -1

def draw():
    screen.fill(BLACK)
    pygame.draw.rect(screen, WHITE, left_paddle)
    pygame.draw.rect(screen, WHITE, right_paddle)
    pygame.draw.ellipse(screen, WHITE, ball)
    pygame.draw.aaline(screen, WHITE, (WIDTH//2, 0), (WIDTH//2, HEIGHT))

    left_text = font.render(f"{left_score}", True, WHITE)
    right_text = font.render(f"{right_score}", True, WHITE)
    screen.blit(left_text, (WIDTH // 4, 20))
    screen.blit(right_text, (WIDTH * 3 // 4, 20))

    pygame.display.flip()

def main():
    global left_score, right_score

    left_speed = 0
    right_speed = 0
    paddle_speed = 7

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

            # Paddle keypress
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_w:
                    left_speed = -paddle_speed
                elif event.key == pygame.K_s:
                    left_speed = paddle_speed
                elif event.key == pygame.K_UP:
                    right_speed = -paddle_speed
                elif event.key == pygame.K_DOWN:
                    right_speed = paddle_speed
            if event.type == pygame.KEYUP:
                if event.key in [pygame.K_w, pygame.K_s]:
                    left_speed = 0
                if event.key in [pygame.K_UP, pygame.K_DOWN]:
                    right_speed = 0

        # Move paddles
        left_paddle.y += left_speed
        right_paddle.y += right_speed
        left_paddle.y = max(0, min(HEIGHT - PADDLE_HEIGHT, left_paddle.y))
        right_paddle.y = max(0, min(HEIGHT - PADDLE_HEIGHT, right_paddle.y))

        # Move ball
        ball.x += ball_vel[0]
        ball.y += ball_vel[1]

        # Ball collision
        if ball.top <= 0 or ball.bottom >= HEIGHT:
            ball_vel[1] *= -1
        if ball.colliderect(left_paddle) or ball.colliderect(right_paddle):
            ball_vel[0] *= -1

        # Scoring
        if ball.left <= 0:
            right_score += 1
            reset_ball()
        elif ball.right >= WIDTH:
            left_score += 1
            reset_ball()

        draw()
        clock.tick(FPS)

    pygame.quit()
    sys.exit()

if __name__ == "__main__":
    main()
